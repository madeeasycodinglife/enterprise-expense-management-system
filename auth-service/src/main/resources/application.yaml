server:
  port: ${SERVER_PORT:8081}


spring:
  application:
    name: auth-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:auth-service}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:sa}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
  h2:
    console:
      path: ${SPRING_H2_CONSOLE_PATH:/h2-console}
      enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
      settings:
        web-allow-others: true

  web:
    resources:
      add-mappings: ${SPRING_WEB_RESOURCES_ADD_MAPPINGS:false}

  output:
    ansi:
      enabled: ALWAYS


security:
  authorization:
    paths:
      - path: /auth-service/sign-up
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_SIGNUP_ROLES:}
      - path: /auth-service/sign-in
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_SIGNIN_ROLES:}
      - path: /auth-service/log-out
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_LOGOUT_ROLES:}
      - path: /auth-service/validate-access-token/**
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_VALIDATE_ACCESS_TOKEN_ROLES:}
      - path: /auth-service/refresh-token/**
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_REFRESH_TOKEN_ROLES:}

      - path: /auth-service/get-user/**
        method: GET
        roles: ${SECURITY_AUTHORIZATION_PATHS_REFRESH_TOKEN_ROLES:EMPLOYEE,MANAGER,FINANCE,ADMIN}

      - path: /auth-service/partial-update/**
        method: PATCH
        roles: ${SECURITY_AUTHORIZATION_PATHS_PARTIAL_UPDATE_ROLES:EMPLOYEE,MANAGER,FINANCE,ADMIN}



resilience4j:
  circuitbreaker:
    configs:
      companyServiceCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: 20
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: COUNT_BASED
    instances:
      myCircuitBreaker: # this name is used in the annotation
        baseConfig: companyServiceCircuitBreaker

  retry:
    metrics:
      legacy:
        enabled: true
    configs:
      companyServiceRetry:
        maxAttempts: 3 # The maximum number of attempts to retry the operation. In this example, it is set to 3 attempt.
        waitDuration: 500ms # The duration to wait between retry attempts.
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.HttpClientErrorException
          - java.io.IOException
          - java.lang.RuntimeException # The specific exceptions for which the retry should be triggered. In this case, the retry will be attempted only for java.lang.RuntimeException exceptions.
    instances:
      myRetry: # this name is used in the annotation
        baseConfig: companyServiceRetry




eureka:
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: ${EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS:30}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}  # Add the hostname property here
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS:10}
    lease-expiration-duration-in-seconds: ${EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS:90}


management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}
  health:
    circuitbreakers:
      enabled: ${MANAGEMENT_HEALTH_CIRCUITBREAKERS_ENABLED:true}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:ALWAYS}
  tracing:
    enabled: ${MANAGEMENT_TRACING_ENABLED:true}
    sampling:
      probability: ${MANAGEMENT_TRACING_SAMPLING_PROBABILITY:1.0}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}


springdoc:
  api-docs:
    groups:
      enabled: true
    path: /auth-service/v3/api-docs
  swagger-ui:
    enabled: false