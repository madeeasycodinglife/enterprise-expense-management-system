server:
  port: ${SERVER_PORT:8085}
spring:
  application:
    name: approval-service


  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:approval-service}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:sa}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
  h2:
    console:
      path: ${SPRING_H2_CONSOLE_PATH:/h2-console}
      enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
      settings:
        web-allow-others: true

  output:
    ansi:
      enabled: ALWAYS


security:
  authorization:
    paths:
      - path: /approval-service/ask-for-approve
        method: POST
        roles: ${SECURITY_AUTHORIZATION_PATHS_SIGNUP_ROLES:EMPLOYEE}
      - path: /approval-service/get-approvals/**
        method: GET
        roles: ${SECURITY_AUTHORIZATION_PATHS_SIGNUP_ROLES:EMPLOYEE,ADMIN,FINANCE,MANAGER}

resilience4j:
  retry:
    configs:
      approvalServiceRetry:
        maxAttempts: 3
        waitDuration: 500ms
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.HttpClientErrorException
          - java.lang.RuntimeException
    instances:
      myRetry:
        baseConfig: approvalServiceRetry

  circuitbreaker:
    configs:
      approvalServiceCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: 20  # 20% failure rate to open the circuit
        minimumNumberOfCalls: 5   # Minimum number of calls before circuit is considered
        slidingWindowSize: 10     # Size of the sliding window
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
    instances:
      myCircuitBreaker:
        baseConfig: approvalServiceCircuitBreaker

eureka:
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: ${EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS:30}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}  # Add the hostname property here
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS:10}
    lease-expiration-duration-in-seconds: ${EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS:90}


# Security Configuration for Actuator Endpoints
# Logging Configuration
logging:
  level:
    org.springframework.boot.actuate.health: INFO  # Log health check details for troubleshooting

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}
        exclude: shutdown     # Exclude shutdown (security best practice)

  health:
    circuitbreakers:
      enabled: ${MANAGEMENT_HEALTH_CIRCUITBREAKERS_ENABLED:true}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:ALWAYS}
  tracing:
    enabled: ${MANAGEMENT_TRACING_ENABLED:true}
    sampling:
      probability: ${MANAGEMENT_TRACING_SAMPLING_PROBABILITY:1.0}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

# Spring Doc

springdoc:
  api-docs:
    groups:
      enabled: true
    path: /approval-service/v3/api-docs
  swagger-ui:
    enabled: false